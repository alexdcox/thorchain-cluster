version: '3'

services:
  thornode1:
    container_name: thornode1
    hostname: thornode1
    image: github.com/alexdcox/thornode:mocknet
    restart: unless-stopped
    ports:
      - 1317:1317
      - 26657:26657
    environment:
      NODES: 1
      SEED: thornode1
      SEEDS: thornode1,thornode2
      PEER: thornode2
      NET: mocknet
      SIGNER_NAME: thorchain
      SIGNER_PASSWD: password
      SIGNER_SEED_PHRASE: animal possible inch item nut daughter shoot gain lonely garlic pledge frown snow alter hurdle future beach love must walk north umbrella skin enough
#      ETH_HOST: http://ethereum1:8545
#      CONTRACT: 0xE65e9d372F8cAcc7b6dfcd4af6507851Ed31bb44
      THORNODE_API_ENABLE: "true"
      NATIVE: none
      THOR_BLOCK_TIME: 5s
    entrypoint:
      /docker/scripts/genesis.sh
    volumes:
      - ../scripts:/docker/scripts
      - thornode1:/root/.thornode
      - thornode1bond:/root/.bond
    command: [ "thornode", "start","--log_level","debug","--log_format","json","--rpc.laddr", "tcp://0.0.0.0:26657" ]
    networks:
      thornode:
        ipv4_address: 172.32.60.1

  bifrost1:
    container_name: bifrost1
    hostname: bifrost1
    image: github.com/alexdcox/thornode:mocknet
    restart: unless-stopped
    environment:
      PEER: thornode1
      NET: mocknet
      CHAIN_HOSTNAME: thornode1
      CHAIN_API: thornode1:1317
      CHAIN_RPC: thornode1:26657
      DASH_HOST: dash1:19898
      BCH_HOST: bitcoincash1:28443
      # BTC_HOST: bitcoin1:18443
      # BINANCE_HOST: http://binance1:26660
      # LTC_HOST: litecoin1:38443
      # ETH_HOST: http://ethereum1:8545
      SIGNER_NAME: thorchain
      SIGNER_PASSWD: password
      SIGNER_SEED_PHRASE: animal possible inch item nut daughter shoot gain lonely garlic pledge frown snow alter hurdle future beach love must walk north umbrella skin enough
      THOR_BLOCK_TIME: 5s
      BLOCK_SCANNER_BACKOFF: 5s
    entrypoint:
      /docker/scripts/bifrost.sh
    volumes:
      - ../scripts:/docker/scripts
      - thornode1:/root/.thornode
      - bifrost1:/var/data/bifrost
      - bifrost1etc:/etc/bifrost
    command: ["bifrost", "-c", "/etc/bifrost/config.json", "-t", "/etc/bifrost/preparam.data", "-l", "debug"]
    networks:
      thornode:
        ipv4_address: 172.32.61.1

  thornode2:
    container_name: thornode2
    hostname: thornode2
    image: github.com/alexdcox/thornode:mocknet
    restart: unless-stopped
    environment:
      PEER: thornode1
#      BINANCE: binance1:26660
      NET: mocknet
      SIGNER_NAME: thorchain
      SIGNER_PASSWD: password
      SIGNER_SEED_PHRASE: pair material jealous clip silly fly cry mule organ result topple conduct purchase marine library modify smart wood menu service such option reveal punch
#      CONTRACT: 0xE65e9d372F8cAcc7b6dfcd4af6507851Ed31bb44
      THORNODE_API_ENABLE: "true"
      NATIVE: none
      THOR_BLOCK_TIME: 5s
    entrypoint:
      /docker/scripts/validator.sh
    volumes:
      - ../scripts:/docker/scripts
      - thornode2:/root/.thornode
      - thornode2bond:/root/.bond
    command: ["thornode", "start","--log_level","debug","--log_format","json","--rpc.laddr", "tcp://0.0.0.0:26657"]
    networks:
      thornode:
        ipv4_address: 172.32.60.2

  bifrost2:
    container_name: bifrost2
    hostname: bifrost2
    image: github.com/alexdcox/thornode:mocknet
    restart: unless-stopped
    environment:
      PEER: thornode2
      NET: mocknet
      CHAIN_HOSTNAME: thornode2
      CHAIN_API: thornode2:1317
      CHAIN_RPC: thornode2:26657
      DASH_HOST: dash2:19898
      BCH_HOST: bitcoincash2:28443
      # BTC_HOST: bitcoin1:18443
      # BINANCE_HOST: http://binance1:26660
      # LTC_HOST: litecoin1:38443
      # ETH_HOST: http://ethereum1:8545
      # CONTRACT: 0xE65e9d372F8cAcc7b6dfcd4af6507851Ed31bb44
      SIGNER_NAME: thorchain
      SIGNER_PASSWD: password
      SIGNER_SEED_PHRASE: pair material jealous clip silly fly cry mule organ result topple conduct purchase marine library modify smart wood menu service such option reveal punch
      THOR_BLOCK_TIME: 5s
      BLOCK_SCANNER_BACKOFF: 5s
    entrypoint:
      /docker/scripts/bifrost.sh
    volumes:
      - ../scripts:/docker/scripts
      - thornode2:/root/.thornode
      - bifrost2:/var/data/bifrost
      - bifrost2etc:/etc/bifrost
    command: ["bifrost", "-c", "/etc/bifrost/config.json", "-t", "/etc/bifrost/preparam.data", "-l", "debug"]
    networks:
      thornode:
        ipv4_address: 172.32.61.2

#  binance1:
#    container_name: binance1
#    hostname: binance1
#    image: registry.gitlab.com/thorchain/bepswap/mock-binance
#    networks:
#      - thornode
#

  dash1:
    container_name: dash1
    hostname: dash1
    restart: unless-stopped
    image: github.com/alexdcox/dash
    ports:
      - 19898:19898
    environment:
      BLOCK_TIME: 5
    entrypoint: "/scripts/entrypoint-regtest-genesis.sh"
    networks:
      thornode:
        ipv4_address: 172.32.62.1

  dash2:
    container_name: dash2
    hostname: dash2
    restart: unless-stopped
    image: github.com/alexdcox/dash
    entrypoint: "/scripts/entrypoint-regtest-masternode.sh"
    networks:
      thornode:
        ipv4_address: 172.32.62.2

  dash3:
    container_name: dash3
    hostname: dash3
    restart: unless-stopped
    image: github.com/alexdcox/dash
    entrypoint: "/scripts/entrypoint-regtest-masternode.sh"
    networks:
      thornode:
        ipv4_address: 172.32.62.3

  dash4:
    container_name: dash4
    hostname: dash4
    restart: unless-stopped
    image: github.com/alexdcox/dash
    entrypoint: "/scripts/entrypoint-regtest-masternode.sh"
    networks:
      thornode:
        ipv4_address: 172.32.62.4

#  bitcoin1:
#    container_name: bitcoin1
#    hostname: bitcoin1
#    restart: unless-stopped
#    ports:
#      - 18443:18443
#      # - 18444:18444 (shouldn't need the P2P as it's outbound?)
#    image: registry.gitlab.com/thorchain/devops/bitcoin-core:0.21.1
#    environment:
#      RPC_PORT: "38443"
#      BLOCK_TIME: 5
#    entrypoint: "/scripts/entrypoint-mock.sh"
#    networks:
#      - thornode

  bitcoincash1:
    container_name: bitcoincash1
    hostname: bitcoincash1
    restart: unless-stopped
    ports:
      - 28443:28443
    image: registry.gitlab.com/thorchain/devops/bitcoin-cash:23.0.0
    environment:
      RPC_PORT: 28443
      BLOCK_TIME: 5
    volumes:
      - ../scripts:/docker/scripts
    entrypoint: "/docker/scripts/bitcoin-cash-entrypoint-mock.sh"
    networks:
      - thornode

  bitcoincash2:
    container_name: bitcoincash2
    hostname: bitcoincash2
    restart: unless-stopped
    image: registry.gitlab.com/thorchain/devops/bitcoin-cash:23.0.0
    environment:
      RPC_PORT: 28443
      BLOCK_TIME: 5
    volumes:
      - ../scripts:/docker/scripts
    entrypoint: "/docker/scripts/bitcoin-cash-entrypoint-mock.sh"
    networks:
      - thornode

  midgard:
    container_name: midgard
    hostname: midgard
    image: registry.gitlab.com/thorchain/midgard:develop
    restart: unless-stopped
    environment:
      MIDGARD_THORCHAIN_THOR_NODE_URL: http://thornode1:1317/thorchain
      MIDGARD_THORCHAIN_TENDERMINT_URL: http://thornode1:26657/websocket
      MIDGARD_TIMESCALE_HOST: midgard-db
      MIDGARD_THORCHAIN_LAST_CHAIN_BACKOFF: ${THOR_BLOCK_TIME:-5s}
    ports:
      - 8080:8080
    logging:
      driver: "json-file"
      options:
        max-size: "128m"
        max-file: "3"
    networks:
      - thornode

  midgard-db:
    container_name: midgard-db
    hostname: midgard-db
    restart: unless-stopped
    image: timescale/timescaledb:2.2.0-pg13
    environment:
      - POSTGRES_USER=midgard
      - POSTGRES_PASSWORD=password
    command: postgres -c 'max_connections=250'
    volumes:
      - midgard:/docker-entrypoint-initdb.d/
    logging:
      driver: "json-file"
      options:
        max-size: "32m"
        max-file: "3"
    networks:
      - thornode

volumes:
  thornode1:
  thornode1bond:
  bifrost1:
  bifrost1etc:
  thornode2:
  thornode2bond:
  bifrost2:
  bifrost2etc:
  midgard:

networks:
  thornode:
    driver_opts:
      com.docker.network.driver.mtu: 1500
      com.docker.network.bridge.enable_icc: "true"
      com.docker.network.bridge.enable_ip_masquerade: "true"
      com.docker.network.bridge.host_binding_ipv4: "0.0.0.0"
    ipam:
      driver: default
      config:
        - subnet: 172.32.10.0/16
